/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application.modules.users.view;

import application.models.Dates;
import application.models.SingletonF;
import application.modules.users.model.BLL.lib_files.json;
import application.modules.users.model.BLL.lib_files.txt;
import application.modules.users.model.BLL.lib_files.xml;
import application.modules.users.model.models.singleton;
import application.utils.Functions;
import application.utils.Menus;
import application.modules.menu.view.app_view;
import static application.modules.users.view.new_admin_view.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Date;

/**
 *
 * @author nacho
 */
public class admin_view extends javax.swing.JFrame {

    /**
     * Creates new form admin_view
     */
    public admin_view() {
        initComponents();
        closeWindow();
        this.setTitle("Administrators");
        this.setLocationRelativeTo(null);
    }
    public static int Admintochange;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createAButton = new javax.swing.JButton();
        changeDataAButtorn = new javax.swing.JButton();
        printDataAButton = new javax.swing.JButton();
        deleteDataAButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        findAButton = new javax.swing.JButton();
        sortbyAButton = new javax.swing.JButton();
        exportAButton = new javax.swing.JButton();
        importAButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        filemenu = new javax.swing.JMenu();
        importmenu = new javax.swing.JMenuItem();
        exportmenu = new javax.swing.JMenuItem();
        sortmenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        createAButton.setText("Create");
        createAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAButtonActionPerformed(evt);
            }
        });

        changeDataAButtorn.setText("Change Data");
        changeDataAButtorn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeDataAButtornActionPerformed(evt);
            }
        });

        printDataAButton.setText("Print Data");
        printDataAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printDataAButtonActionPerformed(evt);
            }
        });

        deleteDataAButton.setText("Delete");
        deleteDataAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDataAButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        findAButton.setText("Find");
        findAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAButtonActionPerformed(evt);
            }
        });

        sortbyAButton.setText("Sort By");
        sortbyAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortbyAButtonActionPerformed(evt);
            }
        });

        exportAButton.setText("Export");
        exportAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportAButtonActionPerformed(evt);
            }
        });

        importAButton.setText("Import");
        importAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importAButtonActionPerformed(evt);
            }
        });

        filemenu.setText("File");

        importmenu.setText("Import");
        importmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importmenuActionPerformed(evt);
            }
        });
        filemenu.add(importmenu);

        exportmenu.setText("Export");
        exportmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportmenuActionPerformed(evt);
            }
        });
        filemenu.add(exportmenu);

        jMenuBar1.add(filemenu);

        sortmenu.setText("Sort");
        jMenuBar1.add(sortmenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(findAButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createAButton, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(changeDataAButtorn)
                            .addComponent(sortbyAButton))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(printDataAButton)
                                .addGap(92, 92, 92)
                                .addComponent(deleteDataAButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(exportAButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(importAButton))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createAButton)
                    .addComponent(changeDataAButtorn)
                    .addComponent(printDataAButton)
                    .addComponent(deleteDataAButton))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findAButton)
                    .addComponent(sortbyAButton)
                    .addComponent(exportAButton)
                    .addComponent(importAButton))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAButtonActionPerformed
        // TODO add your handling code here:
        //singleton.admins.addData(functions_users.newadmin());
        new new_admin_view().setVisible(true);
    }//GEN-LAST:event_createAButtonActionPerformed

    private void changeDataAButtornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeDataAButtornActionPerformed
        // TODO add your handling code here:
        //singleton.admins.changeData();
        
        Admintochange = Functions.validateint(SingletonF.language.getProperty("adminchange"), SingletonF.language.getProperty("adminchange2"));
        new new_admin_view().setVisible(true);
        saveAdminButton.setText("Edit Admin");
        emptyButton.setVisible(false);
        dniField.setText(singleton.admins.getData(Admintochange-1).getDni());
        nameField.setText(singleton.admins.getData(Admintochange-1).getName());
        subnameField.setText(singleton.admins.getData(Admintochange-1).getSubname());
        phoneField.setText(singleton.admins.getData(Admintochange-1).getPhone_number());
        emailField.setText(singleton.admins.getData(Admintochange-1).getEmail());
        usernameField.setText(singleton.admins.getData(Admintochange-1).getUser());
        passwordField.setText(singleton.admins.getData(Admintochange-1).getPass());
        avatarField.setText(singleton.admins.getData(Admintochange-1).getAvatar());
        statusField.setText(singleton.admins.getData(Admintochange-1).getState());
        Dates b = new Dates(singleton.admins.getData(Admintochange-1).getDate_birthday());
        datebirthdayField.setCalendar(b.DateToCalendar());
        Dates h = new Dates(singleton.admins.getData(Admintochange-1).getHirin_date());
        hiringdateField.setCalendar(h.DateToCalendar());
        salaryField.setText(singleton.admins.getData(Admintochange-1).getSalary()+"");
        activityField.setText(singleton.admins.getData(Admintochange-1).getActivity()+"");
    }//GEN-LAST:event_changeDataAButtornActionPerformed

    private void printDataAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printDataAButtonActionPerformed
        // TODO add your handling code here:
        singleton.admins.printArraylist();
    }//GEN-LAST:event_printDataAButtonActionPerformed

    private void deleteDataAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDataAButtonActionPerformed
        // TODO add your handling code here:
        singleton.admins.deleteData();
    }//GEN-LAST:event_deleteDataAButtonActionPerformed

    private void findAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAButtonActionPerformed
        // TODO add your handling code here:
        String[] find = {SingletonF.language.getProperty("bydni"), SingletonF.language.getProperty("byname"),
            SingletonF.language.getProperty("go_back")};
        int option = Menus.menu(find, SingletonF.language.getProperty("searchadmins"),
                SingletonF.language.getProperty("search"));
        switch (option) {
            case 0://By dni
                singleton.admins.find(0,Functions.validatestring("insert dni","insert dni"));
                break;
            case 1://By name
                singleton.admins.find(1,Functions.validatestring("insert name","insert name"));
                break;
            case 2://Go back
        }
    }//GEN-LAST:event_findAButtonActionPerformed

    private void exportAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportAButtonActionPerformed
        // TODO add your handling code here:
        switch (SingletonF.configApp.getSavingextension()) {
            case "json"://json
                json.createjson();
                break;
            case "xml"://xml
                xml.createxml();
                break;
            case "txt"://txt
                txt.createtxt();
                break;
        }
    }//GEN-LAST:event_exportAButtonActionPerformed

    private void importAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importAButtonActionPerformed
        // TODO add your handling code here:
        switch (SingletonF.configApp.getSavingextension()) {
            case "json"://json
                json.load_json();
                break;
            case "xml"://xml
                xml.load_xml();
                break;
            case "txt": //txt
                txt.load_txt();
                break;
        }
    }//GEN-LAST:event_importAButtonActionPerformed

    private void sortbyAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortbyAButtonActionPerformed
        // TODO add your handling code here:
        String[] sortBy = {"By DNI", "By name", "By birthday", SingletonF.language.getProperty("go_back")};
        int option = Menus.menu(sortBy, SingletonF.language.getProperty("sortadmins"),
                SingletonF.language.getProperty("sort"));
        switch (option) {
            case 0://By dni
                singleton.admins.sortData(0);
                break;
            case 1://By name
                singleton.admins.sortData(1);
                break;
            case 2://By date birthday
                singleton.admins.sortData(2);
                break;
            case 3://Go back
        }
    }//GEN-LAST:event_sortbyAButtonActionPerformed

    private void exportmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportmenuActionPerformed
        // TODO add your handling code here:
        switch (SingletonF.configApp.getSavingextension()) {
            case "json"://json
                json.createjson();
                break;
            case "xml"://xml
                xml.createxml();
                break;
            case "txt"://txt
                txt.createtxt();
                break;
        }
    }//GEN-LAST:event_exportmenuActionPerformed

    private void importmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importmenuActionPerformed
        // TODO add your handling code here:
        switch (SingletonF.configApp.getSavingextension()) {
            case "json"://json
                json.load_json();
                break;
            case "xml"://xml
                xml.load_xml();
                break;
            case "txt": //txt
                txt.load_txt();
                break;
        }
    }//GEN-LAST:event_importmenuActionPerformed

    private void closeWindow() {
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                //setVisible(false);
                dispose();
                new app_view().setVisible(true);
            }
        });
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changeDataAButtorn;
    private javax.swing.JButton createAButton;
    private javax.swing.JButton deleteDataAButton;
    private javax.swing.JButton exportAButton;
    private javax.swing.JMenuItem exportmenu;
    private javax.swing.JMenu filemenu;
    private javax.swing.JButton findAButton;
    private javax.swing.JButton importAButton;
    private javax.swing.JMenuItem importmenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton printDataAButton;
    private javax.swing.JButton sortbyAButton;
    private javax.swing.JMenu sortmenu;
    // End of variables declaration//GEN-END:variables
}
